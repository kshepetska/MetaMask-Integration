{"mappings":"A,S,E,C,C,C,C,C,C,C,C,C,C,C,C,C,E,G,C,I,E,C,C,E,C,G,E,E,K,A,C,M,E,C,E,G,M,C,E,I,C,E,G,Q,O,C,G,I,C,E,E,C,S,E,C,E,O,W,I,E,I,C,E,U,O,I,Q,S,C,C,C,E,I,E,E,K,C,E,G,S,E,C,E,E,E,E,E,E,E,O,E,C,S,E,C,E,E,E,E,E,E,E,Q,E,C,E,K,E,E,C,C,S,E,C,C,C,E,I,E,E,E,E,E,C,M,E,K,W,G,A,E,C,C,E,C,M,C,C,E,C,O,C,C,E,A,E,K,E,C,I,E,A,E,O,E,C,K,E,G,M,E,G,O,E,E,E,A,Y,O,Q,C,C,C,O,Q,C,C,W,O,I,A,C,E,E,S,E,C,E,O,S,C,E,O,A,S,C,E,G,E,M,A,U,mC,K,G,G,C,G,E,E,G,C,E,A,E,C,C,E,C,E,M,C,C,C,E,C,E,K,E,C,A,C,E,E,M,A,G,E,I,C,G,C,E,E,I,A,G,C,A,C,E,E,I,C,E,C,C,E,C,E,I,C,O,E,O,E,E,A,G,C,E,C,A,E,C,C,E,C,E,K,C,A,E,C,C,E,E,K,E,K,E,E,E,K,M,E,O,E,K,G,C,M,C,C,E,C,K,C,C,C,M,E,E,K,G,E,C,C,E,C,E,C,E,C,Q,M,E,E,E,G,C,G,G,E,I,C,G,G,Q,S,G,C,C,E,A,C,E,E,I,A,E,M,C,G,C,C,E,M,C,E,A,G,C,A,I,C,C,E,E,A,I,C,C,E,A,E,C,E,E,Q,C,G,A,I,C,C,E,E,C,C,G,C,C,E,C,C,C,E,E,C,C,E,C,C,C,E,A,E,C,E,K,C,C,C,E,C,K,C,G,A,I,C,C,E,E,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,E,K,C,G,G,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,G,C,I,C,G,K,C,C,C,E,E,E,G,C,G,G,E,I,C,G,G,Q,C,E,E,I,C,E,E,C,M,E,C,E,C,E,E,C,E,C,Q,C,E,E,C,C,G,A,E,C,C,E,C,M,C,C,E,C,M,C,M,C,C,E,C,C,C,E,C,K,E,K,C,C,C,E,C,E,E,C,C,C,CCEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAMI,EANE,EAAgB,SAAS,cAAc,CAAC,iBACxC,EAAa,SAAS,cAAc,CAAC,cACrC,EAAgB,SAAS,cAAc,CAAC,iBACxC,EAAa,SAAS,cAAc,CAAC,cACrC,EAAc,SAAS,cAAc,CAAC,eAGxC,EAAoB,CAAA,EAwCT,SAAA,IAAA,MAAA,AAAA,CAAA,EAAf,EAAA,WAEU,IACA,EAGA,EACA,EAGA,EACA,EACA,EAYA,E,O,E,I,C,S,C,E,O,E,K,E,K,EAtBW,O,E,I,C,I,C,C,E,G,E,EAAA,C,EAAM,EAAK,GAAG,CAAC,WAAW,G,A,M,EAIrB,OAHhB,EAAU,AADC,EAAX,IAAA,EACkB,CAAC,EAAE,CAC3B,EAAc,WAAW,CAAG,mBAA2B,MAAA,CAAR,GAEzB,C,EAAM,EAAK,GAAG,CAAC,UAAU,CAAC,G,A,M,EAiBzB,OAjBjB,EAAgB,EAAhB,IAAA,GACA,EAAgB,EAAK,KAAK,CAAC,OAAO,CAAC,EAAe,SACxD,EAAW,WAAW,CAAI,gBAA6B,MAAA,CAAd,EAAc,QAEjD,EAAsB,6CACtB,EAAe,EACf,EAAA,CACJ,CACE,SAAW,CAAA,EACX,OAAA,CAAU,CAAC,KAAO,SAAS,KAAO,SAAS,E,CAC3C,KAAO,YACP,QAAA,CAAW,CAAC,KAAO,UAAU,KAAO,SAAS,E,CAC7C,KAAO,UACT,E,CAIqB,C,EAAM,AADR,IAAI,EAAK,GAAG,CAAC,QAAQ,CAAC,EAAS,GACV,OAAO,CAAC,SAAS,CAAC,GAAS,IAAI,G,A,M,E,OACnE,EAAkB,AADD,EAAjB,IAAA,GACoC,KAAA,GAAA,CAAA,GAAM,GAChD,EAAY,WAAW,CAAI,iBAAgC,MAAA,CAAhB,EAAgB,S,C,E,E,A,M,E,OAE3D,QAAQ,KAAK,CAAC,qCAAsC,AAD7C,EAAA,IAAA,GACmD,OAAO,E,C,E,E,A,M,E,M,C,E,A,C,EAErE,EAAA,EA7Be,KAAA,CAAA,IAAA,CAAA,U,CAjCb,EAAW,KAAK,CAAC,OAAO,CAAG,OASzB,AAA2B,KAAA,IAApB,OAAO,QAAQ,EACxB,EAAO,IAAI,KAAK,OAAO,QAAQ,EAE/B,EAAc,gBAAgB,CAAC,QAAS,EAAA,W,O,E,I,C,S,C,E,O,E,K,E,K,EAEhC,G,E,I,C,I,C,C,E,G,E,EAAC,EAAD,MAAA,C,E,E,CACF,MAAA,C,EAAM,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAE,OAAQ,qBAAsB,G,A,M,E,OAA9D,EAAA,IAAA,GACA,QAAQ,GAAG,CAAC,uBACZ,AAgBO,WAAA,EAAA,KAAA,CAAA,IAAA,CAAA,U,IArCb,EAAW,KAAK,CAAC,OAAO,CAAG,QAuBrB,EAAoB,CAAA,E,C,E,E,A,M,EAEpB,OAAO,QAAQ,CAAC,MAAM,G,E,K,C,C,M,E,OAjB5B,EAAc,WAAW,CAAG,EAAoB,qBAAuB,mB,C,E,E,A,M,E,OAqBnE,QAAQ,KAAK,CAAC,6BAA8B,AADrC,EAAA,IAAA,GAC2C,OAAO,E,C,E,E,A,M,E,M,C,E,A,C,EAE7D,MAEA,QAAQ,KAAK,CAAC,0BACd,EAAc,SAAS,CAAG,2EAiC9B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _async_to_generator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _ts_generator(thisArg, body) {\n    var f, y, t, g, _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var connectButton = document.getElementById(\"connectButton\");\n    var walletInfo = document.getElementById(\"walletInfo\");\n    var walletAddress = document.getElementById(\"walletAddress\");\n    var ethBalance = document.getElementById(\"ethBalance\");\n    var usdtBalance = document.getElementById(\"usdtBalance\");\n    var web3;\n    var metamaskConnected = false;\n    function showWalletInfo() {\n        walletInfo.style.display = \"block\";\n    }\n    function hideWalletInfo() {\n        walletInfo.style.display = \"none\";\n    }\n    function updateButtonText() {\n        connectButton.textContent = metamaskConnected ? \"Exit from MetaMask\" : \"Connect MetaMask\";\n    }\n    hideWalletInfo();\n    if (typeof window.ethereum !== \"undefined\") {\n        web3 = new Web3(window.ethereum);\n        connectButton.addEventListener(\"click\", /*#__PURE__*/ _async_to_generator(function() {\n            var error;\n            return _ts_generator(this, function(_state) {\n                switch(_state.label){\n                    case 0:\n                        _state.trys.push([\n                            0,\n                            4,\n                            ,\n                            5\n                        ]);\n                        if (!!metamaskConnected) return [\n                            3,\n                            2\n                        ];\n                        return [\n                            4,\n                            window.ethereum.request({\n                                method: \"eth_requestAccounts\"\n                            })\n                        ];\n                    case 1:\n                        _state.sent();\n                        console.log(\"MetaMask connected!\");\n                        updateWalletInfo();\n                        showWalletInfo();\n                        metamaskConnected = true;\n                        return [\n                            3,\n                            3\n                        ];\n                    case 2:\n                        window.location.reload();\n                        _state.label = 3;\n                    case 3:\n                        updateButtonText();\n                        return [\n                            3,\n                            5\n                        ];\n                    case 4:\n                        error = _state.sent();\n                        console.error(\"Error connecting MetaMask:\", error.message);\n                        return [\n                            3,\n                            5\n                        ];\n                    case 5:\n                        return [\n                            2\n                        ];\n                }\n            });\n        }));\n    } else {\n        console.error(\"MetaMask not detected.\");\n        connectButton.innerHTML = 'Install MetaMask <a href=\"https://metamask.io/\" target=\"_blank\">here</a>';\n    }\n    function updateWalletInfo() {\n        return _updateWalletInfo.apply(this, arguments);\n    }\n    function _updateWalletInfo() {\n        _updateWalletInfo = _async_to_generator(function() {\n            var accounts, address, ethBalanceWei, ethBalanceEth, usdtContractAddress, usdtDecimals, usdtABI, usdtContract, usdtBalanceWei, usdtBalanceUsdt, error;\n            return _ts_generator(this, function(_state) {\n                switch(_state.label){\n                    case 0:\n                        _state.trys.push([\n                            0,\n                            4,\n                            ,\n                            5\n                        ]);\n                        return [\n                            4,\n                            web3.eth.getAccounts()\n                        ];\n                    case 1:\n                        accounts = _state.sent();\n                        address = accounts[0];\n                        walletAddress.textContent = \"Wallet Address: \".concat(address);\n                        return [\n                            4,\n                            web3.eth.getBalance(address)\n                        ];\n                    case 2:\n                        ethBalanceWei = _state.sent();\n                        ethBalanceEth = web3.utils.fromWei(ethBalanceWei, \"ether\");\n                        ethBalance.textContent = \"ETH Balance: \".concat(ethBalanceEth, \" ETH\");\n                        usdtContractAddress = \"0xdac17f958d2ee523a2206206994597c13d831ec7\";\n                        usdtDecimals = 6;\n                        usdtABI = [\n                            {\n                                \"constant\": true,\n                                \"inputs\": [\n                                    {\n                                        \"name\": \"_owner\",\n                                        \"type\": \"address\"\n                                    }\n                                ],\n                                \"name\": \"balanceOf\",\n                                \"outputs\": [\n                                    {\n                                        \"name\": \"balance\",\n                                        \"type\": \"uint256\"\n                                    }\n                                ],\n                                \"type\": \"function\"\n                            }\n                        ];\n                        usdtContract = new web3.eth.Contract(usdtABI, usdtContractAddress);\n                        return [\n                            4,\n                            usdtContract.methods.balanceOf(address).call()\n                        ];\n                    case 3:\n                        usdtBalanceWei = _state.sent();\n                        usdtBalanceUsdt = usdtBalanceWei / Math.pow(10, usdtDecimals);\n                        usdtBalance.textContent = \"USDT Balance: \".concat(usdtBalanceUsdt, \" USDT\");\n                        return [\n                            3,\n                            5\n                        ];\n                    case 4:\n                        error = _state.sent();\n                        console.error(\"Error updating wallet information:\", error.message);\n                        return [\n                            3,\n                            5\n                        ];\n                    case 5:\n                        return [\n                            2\n                        ];\n                }\n            });\n        });\n        return _updateWalletInfo.apply(this, arguments);\n    }\n});\n\n//# sourceMappingURL=index.05280410.js.map\n","'use strict';\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const connectButton = document.getElementById(\"connectButton\");\n  const walletInfo = document.getElementById(\"walletInfo\");\n  const walletAddress = document.getElementById(\"walletAddress\");\n  const ethBalance = document.getElementById(\"ethBalance\");\n  const usdtBalance = document.getElementById(\"usdtBalance\");\n\n  let web3;\n  let metamaskConnected = false;\n\n  function showWalletInfo() {\n    walletInfo.style.display = \"block\";\n  }\n\n  function hideWalletInfo() {\n    walletInfo.style.display = \"none\";\n  }\n\n  function updateButtonText() {\n    connectButton.textContent = metamaskConnected ? \"Exit from MetaMask\" : \"Connect MetaMask\";\n  }\n\n  hideWalletInfo();\n\n  if (typeof window.ethereum !== 'undefined') {\n    web3 = new Web3(window.ethereum);\n\n    connectButton.addEventListener(\"click\", async () => {\n      try {\n        if (!metamaskConnected) {\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          console.log(\"MetaMask connected!\");\n          updateWalletInfo();\n          showWalletInfo();\n          metamaskConnected = true;\n        } else {\n          window.location.reload();\n        }\n        updateButtonText();\n      } catch (error) {\n        console.error(\"Error connecting MetaMask:\", error.message);\n      }\n    });\n  } else {\n    console.error(\"MetaMask not detected.\");\n    connectButton.innerHTML = 'Install MetaMask <a href=\"https://metamask.io/\" target=\"_blank\">here</a>';\n  }\n\n  async function updateWalletInfo() {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      const address = accounts[0];\n      walletAddress.textContent = `Wallet Address: ${address}`;\n\n      const ethBalanceWei = await web3.eth.getBalance(address);\n      const ethBalanceEth = web3.utils.fromWei(ethBalanceWei, 'ether');\n      ethBalance.textContent = `ETH Balance: ${ethBalanceEth} ETH`;\n\n      const usdtContractAddress = '0xdac17f958d2ee523a2206206994597c13d831ec7';\n      const usdtDecimals = 6;\n      const usdtABI = [\n        {\n          \"constant\":true,\n          \"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\n          \"name\":\"balanceOf\",\n          \"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\n          \"type\":\"function\"\n        }\n      ];\n\n      const usdtContract = new web3.eth.Contract(usdtABI, usdtContractAddress);\n      const usdtBalanceWei = await usdtContract.methods.balanceOf(address).call();\n      const usdtBalanceUsdt = usdtBalanceWei / (10 ** usdtDecimals);\n      usdtBalance.textContent = `USDT Balance: ${usdtBalanceUsdt} USDT`;\n    } catch (error) {\n      console.error(\"Error updating wallet information:\", error.message);\n    }\n  }\n});\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_async_to_generator","fn","self","args","arguments","apply","err","undefined","_ts_generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","Symbol","iterator","n","v","step","op","TypeError","call","pop","length","push","e","document","addEventListener","web3","connectButton","getElementById","walletInfo","walletAddress","ethBalance","usdtBalance","metamaskConnected","_updateWalletInfo","address","ethBalanceWei","ethBalanceEth","usdtContractAddress","usdtDecimals","usdtABI","usdtBalanceUsdt","_state","eth","getAccounts","accounts","textContent","concat","getBalance","utils","fromWei","usdtContract","Contract","methods","balanceOf","usdtBalanceWei","Math","pow","console","message","style","display","window","ethereum","Web3","request","method","log","updateWalletInfo","location","reload","innerHTML"],"version":3,"file":"index.05280410.js.map"}