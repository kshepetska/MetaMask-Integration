{"mappings":"AAAA;AAEA,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,gBAAgB,SAAS,cAAc,CAAC;IAC9C,MAAM,aAAa,SAAS,cAAc,CAAC;IAC3C,MAAM,gBAAgB,SAAS,cAAc,CAAC;IAC9C,MAAM,aAAa,SAAS,cAAc,CAAC;IAC3C,MAAM,cAAc,SAAS,cAAc,CAAC;IAE5C,IAAI;IACJ,IAAI,oBAAoB;IAExB,SAAS;QACP,WAAW,KAAK,CAAC,OAAO,GAAG;IAC7B;IAEA,SAAS;QACP,WAAW,KAAK,CAAC,OAAO,GAAG;IAC7B;IAEA,SAAS;QACP,cAAc,WAAW,GAAG,oBAAoB,uBAAuB;IACzE;IAEA;IAEA,IAAI,OAAO,OAAO,QAAQ,KAAK,aAAa;QAC1C,OAAO,IAAI,KAAK,OAAO,QAAQ;QAE/B,cAAc,gBAAgB,CAAC,SAAS;YACtC,IAAI;gBACF,IAAI,CAAC,mBAAmB;oBACtB,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;wBAAE,QAAQ;oBAAsB;oBAC9D,QAAQ,GAAG,CAAC;oBACZ;oBACA;oBACA,oBAAoB;gBACtB,OACE,OAAO,QAAQ,CAAC,MAAM;gBAExB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,8BAA8B,MAAM,OAAO;YAC3D;QACF;IACF,OAAO;QACL,QAAQ,KAAK,CAAC;QACd,cAAc,SAAS,GAAG;IAC5B;IAEA,eAAe;QACb,IAAI;YACF,MAAM,WAAW,MAAM,KAAK,GAAG,CAAC,WAAW;YAC3C,MAAM,UAAU,QAAQ,CAAC,EAAE;YAC3B,cAAc,WAAW,GAAG,CAAC,gBAAgB,EAAE,QAAQ,CAAC;YAExD,MAAM,gBAAgB,MAAM,KAAK,GAAG,CAAC,UAAU,CAAC;YAChD,MAAM,gBAAgB,KAAK,KAAK,CAAC,OAAO,CAAC,eAAe;YACxD,WAAW,WAAW,GAAG,CAAC,aAAa,EAAE,cAAc,IAAI,CAAC;YAE5D,MAAM,sBAAsB;YAC5B,MAAM,eAAe;YACrB,MAAM,UAAU;gBACd;oBACE,YAAW;oBACX,UAAS;wBAAC;4BAAC,QAAO;4BAAS,QAAO;wBAAS;qBAAE;oBAC7C,QAAO;oBACP,WAAU;wBAAC;4BAAC,QAAO;4BAAU,QAAO;wBAAS;qBAAE;oBAC/C,QAAO;gBACT;aACD;YAED,MAAM,eAAe,IAAI,KAAK,GAAG,CAAC,QAAQ,CAAC,SAAS;YACpD,MAAM,iBAAiB,MAAM,aAAa,OAAO,CAAC,SAAS,CAAC,SAAS,IAAI;YACzE,MAAM,kBAAkB,iBAAkB,MAAM;YAChD,YAAY,WAAW,GAAG,CAAC,cAAc,EAAE,gBAAgB,KAAK,CAAC;QACnE,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sCAAsC,MAAM,OAAO;QACnE;IACF;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const connectButton = document.getElementById(\"connectButton\");\n  const walletInfo = document.getElementById(\"walletInfo\");\n  const walletAddress = document.getElementById(\"walletAddress\");\n  const ethBalance = document.getElementById(\"ethBalance\");\n  const usdtBalance = document.getElementById(\"usdtBalance\");\n\n  let web3;\n  let metamaskConnected = false;\n\n  function showWalletInfo() {\n    walletInfo.style.display = \"block\";\n  }\n\n  function hideWalletInfo() {\n    walletInfo.style.display = \"none\";\n  }\n\n  function updateButtonText() {\n    connectButton.textContent = metamaskConnected ? \"Exit from MetaMask\" : \"Connect MetaMask\";\n  }\n\n  hideWalletInfo();\n\n  if (typeof window.ethereum !== 'undefined') {\n    web3 = new Web3(window.ethereum);\n\n    connectButton.addEventListener(\"click\", async () => {\n      try {\n        if (!metamaskConnected) {\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          console.log(\"MetaMask connected!\");\n          updateWalletInfo();\n          showWalletInfo();\n          metamaskConnected = true;\n        } else {\n          window.location.reload();\n        }\n        updateButtonText();\n      } catch (error) {\n        console.error(\"Error connecting MetaMask:\", error.message);\n      }\n    });\n  } else {\n    console.error(\"MetaMask not detected.\");\n    connectButton.innerHTML = 'Install MetaMask <a href=\"https://metamask.io/\" target=\"_blank\">here</a>';\n  }\n\n  async function updateWalletInfo() {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      const address = accounts[0];\n      walletAddress.textContent = `Wallet Address: ${address}`;\n\n      const ethBalanceWei = await web3.eth.getBalance(address);\n      const ethBalanceEth = web3.utils.fromWei(ethBalanceWei, 'ether');\n      ethBalance.textContent = `ETH Balance: ${ethBalanceEth} ETH`;\n\n      const usdtContractAddress = '0xdac17f958d2ee523a2206206994597c13d831ec7';\n      const usdtDecimals = 6;\n      const usdtABI = [\n        {\n          \"constant\":true,\n          \"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\n          \"name\":\"balanceOf\",\n          \"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\n          \"type\":\"function\"\n        }\n      ];\n\n      const usdtContract = new web3.eth.Contract(usdtABI, usdtContractAddress);\n      const usdtBalanceWei = await usdtContract.methods.balanceOf(address).call();\n      const usdtBalanceUsdt = usdtBalanceWei / (10 ** usdtDecimals);\n      usdtBalance.textContent = `USDT Balance: ${usdtBalanceUsdt} USDT`;\n    } catch (error) {\n      console.error(\"Error updating wallet information:\", error.message);\n    }\n  }\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}